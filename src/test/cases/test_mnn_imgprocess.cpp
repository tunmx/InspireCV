#ifdef INSPIRECV_EXPANSION_MODULE_TEST_MNN_IMGPROCESS
#include "../common/inspirecv_image_process.h"
#include "../common/common.h"

static const float mean_shape[212] = {
  57.32878,   105.83315, 29.624239,  20.165985,  67.11997,   68.87743,  34.962475,  24.871325,
  70.813126,  72.67922,  9.729976,   60.237606,  8.554062,   52.910946, 7.9402304,  45.916294,
  7.893721,   39.038574, 7.975547,   31.956337,  8.622486,   25.029036, 9.702873,   18.02224,
  29.999453,  24.584417, 101.480095, 18.32498,   102.96178,  31.837185, 102.421196, 25.293413,
  103.14877,  45.68892,  102.83123,  38.913933,  101.509834, 59.725216, 18.334711,  15.045836,
  87.70989,   23.169832, 57.21172,   19.708687,  57.577744,  34.00675,  57.35939,   26.938309,
  66.14159,   9.411763,  66.75376,   68.22819,   62.6334,    62.411827, 69.79199,   23.472647,
  48.240788,  8.405983,  31.455082,  5.2922187,  64.99532,   74.57111,  43.865818,  48.00997,
  57.690235,  75.386116, 69.78392,   65.17174,   34.54513,   18.694391, 49.58706,   23.827042,
  57.785107,  68.08823,  45.6225,    65.31815,   57.99898,   63.48456,  53.4715,    62.43662,
  48.237335,  68.25542,  78.643456,  18.564125,  73.371895,  69.14687,  79.056885,  25.003506,
  67.02467,   13.268747, 38.6335,    69.56436,   57.690876,  51.854816, 83.83572,   24.79103,
  89.265,     12.73436,  99.282196,  73.33285,   76.34923,   69.55592,  74.20933,   24.599825,
  78.53577,   20.896051, 39.997128,  19.68584,   74.3311,    11.654106, 35.248596,  21.433992,
  100.43374,  66.47729,  28.646503,  97.14609,   40.153236,  11.322219, 44.286064,  23.392376,
  47.92698,   12.827263, 41.805626,  69.43811,   24.885767,  12.71509,  48.393387,  68.740715,
  50.14667,   74.66772,  44.07503,   72.71468,   12.846613,  74.02932,  39.782177,  24.16436,
  102.569374, 52.513325, 57.747818,  41.270073,  82.500984,  5.628833,  82.15605,   11.161637,
  35.225296,  21.377424, 73.433525,  6.3903227,  96.06538,   15.276841, 90.67236,   8.234125,
  48.962955,  105.35969, 41.72264,   103.72105,  34.76933,   100.86308, 40.689857,  5.962051,
  23.708202,  92.38355,  19.15793,   86.72503,   15.390202,  80.73963,  32.348423,  11.188513,
  23.406786,  8.145785,  83.923935,  19.972424,  67.38307,   50.0823,   62.78393,   50.88386,
  48.079323,  50.001537, 52.845192,  50.883617,  46.965893,  39.609715, 64.93429,   23.805267,
  68.55757,   39.412674, 72.076805,  47.75158,   25.989338,  23.418095, 72.78181,   102.99326,
  79.36011,   99.85451,  65.49673,   105.025246, 93.91416,   86.0099,   96.90711,   79.99802,
  84.915344,  96.01808,  90.13561,   91.4032,    11.011357,  67.08702,  58.06053,   68.5939,
  73.52952,   19.782192, 78.52056,   20.81598};

template <typename T>
inspirecv::Rect<T> RectRotate90(const inspirecv::Rect<T> &rect) {
    auto p1 = inspirecv::Point2f::Create(rect.GetY(), rect.GetX());
    auto p2 =
      inspirecv::Point2f::Create(rect.GetY() + rect.GetHeight(), rect.GetX() + rect.GetWidth());
    return inspirecv::Rect<T>::Create(p1, p2);
}

TEST_CASE("test_mnn_imgprocess_image", "[basic]") {
    DRAW_SPLIT_LINE;
    inspirecv::Image image = inspirecv::Image::Create("../images/r90.jpg");
    REQUIRE(!image.Empty());
    image.Show();

    auto rect = inspirecv::Rect2f::Create(87, 123, 160, 160);

    std::vector<inspirecv::Point2f> lmk_from_affine_112 = {
      {70.6199, 107.776}, {38.2463, 35.314},  {76.684, 82.8031},  {43.443, 40.5354},
      {80.413, 85.6937},  {17.1565, 71.3457}, {14.8536, 65.0727}, {13.1444, 58.8248},
      {11.3194, 52.347},  {10.369, 45.7271},  {10.4889, 39.1865}, {10.375, 32.6652},
      {38.0399, 39.7189}, {102.944, 27.3464}, {104.302, 38.8514}, {103.516, 33.0722},
      {103.287, 50.2231}, {103.807, 44.6002}, {100.905, 61.396},  {26.3211, 27.5234},
      {95.4192, 33.4671}, {66.7406, 35.439},  {69.9062, 53.9102}, {68.3037, 44.6133},
      {74.2722, 26.9009}, {76.6251, 81.5219}, {73.794, 77.0746},  {77.4777, 36.8154},
      {58.8362, 27.88},   {42.5965, 23.9663}, {76.4231, 89.5568}, {56.298, 65.8475},
      {70.0063, 91.5508}, {79.1133, 78.5219}, {43.9716, 34.2174}, {59.8422, 38.6578},
      {69.6871, 82.7271}, {58.1253, 80.0334}, {69.7176, 78.8347}, {65.5954, 77.6201},
      {60.7883, 82.7248}, {86.3965, 31.1182}, {81.1761, 81.29},   {87.4605, 37.5257},
      {75.4005, 29.6431}, {51.3411, 83.041},  {70.36, 70.3337},   {92.2527, 36.0325},
      {94.9259, 22.4389}, {97.7718, 72.5162}, {83.238, 80.8633},  {82.2184, 37.5089},
      {86.5261, 33.9256}, {49.4421, 35.2344}, {82.1652, 26.8387}, {43.8524, 36.7955},
      {99.3244, 66.7024}, {43.0746, 100.924}, {50.3816, 29.6656}, {53.6567, 38.441},
      {58.1567, 31.366},  {54.0065, 83.236},  {34.3825, 27.8204}, {60.6862, 84.0903},
      {62.185, 90.6717},  {56.1793, 87.7044}, {23.4434, 82.8646}, {48.9809, 39.714},
      {102.271, 56.0441}, {71.3558, 63.4165}, {87.2717, 20.5907}, {88.5365, 23.9878},
      {43.6631, 36.6878}, {80.6869, 23.2626}, {100.939, 21.4226}, {94.5359, 18.7787},
      {62.9434, 108.463}, {55.9455, 107.096}, {49.0774, 104.403}, {50.959, 25.5104},
      {37.3529, 97.0555}, {32.2004, 92.7701}, {27.2504, 88.0468}, {41.9478, 28.1187},
      {33.8153, 23.8246}, {91.4697, 31.4963}, {77.8098, 67.0375}, {74.4955, 68.3184},
      {60.7582, 68.4842}, {65.3877, 69.267},  {58.7079, 57.9974}, {73.1523, 37.408},
      {77.55, 56.5703},   {80.2859, 63.6322}, {33.8401, 37.467},  {81.3511, 102.143},
      {84.7296, 97.6002}, {76.7125, 105.857}, {93.2229, 82.9646}, {95.7355, 77.667},
      {87.7938, 92.7255}, {90.7656, 87.8324}, {19.8369, 77.4135}, {69.7576, 84.2044},
      {81.2411, 33.2101}, {86.5633, 33.8722},
    };

    auto rect_rot90 = RectRotate90(rect);
    std::cout << rect_rot90 << std::endl;

    image.DrawRect(rect_rot90.As<int>(), {0, 0, 255}, 2);
    image.Show("rect_rot90");

    inspirecv::InspireImagePeocess process;
    process.SetDataBuffer(image.Data(), image.Height(), image.Width());
    process.SetPreviewScale(1.0);
    process.SetRotationMode(inspirecv::ROTATION_MODE::ROTATION_90);
    process.SetDataFormat(inspirecv::DATA_FORMAT::BGR);
    auto rotation_mode_affine = process.GetAffineMatrix();
    std::cout << "rotation_mode_affine " << rotation_mode_affine << std::endl;

    auto vertices = rect.ToFourVertices();
    auto rotated_vertices = inspirecv::ApplyTransformToPoints(vertices, rotation_mode_affine);
    std::cout << "rotated_vertices " << rotated_vertices << std::endl;

    auto rotated_rect =
      inspirecv::Rect<int>::Create(rotated_vertices[0].GetX(), rotated_vertices[0].GetY(),
                                   rotated_vertices[2].GetX() - rotated_vertices[0].GetX(),
                                   rotated_vertices[2].GetY() - rotated_vertices[0].GetY());
    std::cout << "rotated_rect " << rotated_rect << std::endl;

    std::cout << rotated_rect << std::endl;
    std::vector<inspirecv::Point2f> dst_pts;
    dst_pts.push_back(inspirecv::Point2f::Create(0, 0));
    dst_pts.push_back(inspirecv::Point2f::Create(112, 0));
    dst_pts.push_back(inspirecv::Point2f::Create(112, 112));
    dst_pts.push_back(inspirecv::Point2f::Create(0, 112));

    auto affine = inspirecv::SimilarityTransformEstimate(rotated_vertices, dst_pts);
    std::cout << affine << std::endl;

    auto output_image = process.ExecuteImageAffineProcessing(affine, 112, 112);
    output_image.Show("output_image");

    auto affine_inv = affine.GetInverse();
    auto lmk_from_rot90 = inspirecv::ApplyTransformToPoints(lmk_from_affine_112, affine_inv);
    // std::cout << "lmk_from_rot90 " << lmk_from_rot90 << std::endl;
    for (const auto &p : lmk_from_rot90) {
        std::cout << p << std::endl;
        image.DrawCircle(p.As<int>(), 2, {0, 255, 0}, 1);
    }
    image.Show("lmk_from_rot90");
}

#endif  // INSPIRECV_EXPANSION_MODULE_TEST_MNN_IMGPROCESS